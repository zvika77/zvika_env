_HiStOrY_V2_
show\040databases;
use\040mysql
show\040tables;
select\040count(*)\040from\040general_log;
select\040count(*)\040from\040slow_log;
select\040count(*)\040from\040general_log;
\\q
show\040databases;
\\q
show\040databases;
select\040name,value\040from\040insight.settings\040where\040client_id\040=\040'nestle'\040and\040name\040like\040'%loader%disable%';
select\040name,value\040from\040insight.settings\040where\040client_id\040=\040'nestle'\040and\040name\040like\040'%disable%';
show\040databases;
use\040insight
show\040tables;
select\040client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'wtf.rebuild.state.prod';
select\040client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'wtf.rebuild.state.prod'\040order\040by\0402\040;
select\040settings.name,\040client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'%loader.state.generation%prod'\040order\040by\0402,\0401;
select\040settings.name,\040client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'%loader.state.generation%prod'\040and\040settings.client_id\040=\040'livingsocial'\040\040order\040by\0402,\0401;
select\040client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'wtf.rebuild.state.prod';
select\040client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'%.rebuild.state.prod';
select\040settings.name,client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'%.rebuild.state.prod';
select\040settings.name,client_id,\040value\040from\040settings\040inner\040join\040clients\040on\040settings.client_id\040=\040clients.id\040and\040clients.active\040=\0401\040where\040settings.name\040like\040'%.rebuild.state.prod'\040and\040client_id\040=\040'livingsocial';
\\q
use\040insight;
source\040mysql\040n
source\040mysql_rebuild_status.sql
\\q
use\040insight
source\040mysql_rebuild_status.sql
\\q
use\040insight\040-A
select\040'111'\040;
\\q
show\040databases;
use\040insight;
show\040tables\040;
SELECT\040value
FROM\040insight.settings
WHERE\040name\040=\040'regression_enabled'
;
SELECT\040value\040FROM\040insight.settings\040WHERE\040name\040=\040'regression_enabled';
SELECT\040value
FROM\040insight.settings
WHERE\040name\040=\040'regression_enabled'
;
SELECT\040value\040FROM\040insight.settings\040WHERE\040name\040=\040'regression_enabled';
UPDATE\040insight.settings\040set\040value\040=\0400\040WHERE\040name\040=\040'regression_enabled'
;
commit;
show\040databases;
show\040status;
show\040slave\040status\\G;
show\040slave\040status;
show\040databases;
use\040insight;
show\040tables;
desc\040settings
;
select\040name,value,client_id\040from\040settings\040limit\0401;
select\040name,value,client_id\040from\040settings\040where\040client_id\040=\040'intuit';
use\040insight;
desc\040settings
;
select\040name\040,value,client_id\040from\040settings\040where\040client_id\040=\040'intuit'\040limit\04010;
select\040name\040,value,client_id\040from\040settings\040where\040client_id\040=\040'intuit'\040and\040name\040like\040'%loader%'\040\040limit\04010;
select\040name\040,value,client_id\040from\040settings\040where\040client_id\040=\040'intuit'\040and\040name\040like\040'%hadoop%'\040\040limit\04010;
use\040insight;
desc\040settings;
select\040name\040from\040settings\040where\040value\040like\040'%hadoop%'\040limit\04010;
select\040client_id,name,value,objectValue\040from\040settings\040where\040name\040=\040'loader\040type'\040and\040client_id\040=\040'intuit'\040limit\04010;
select\040client_id,name,value,objectValue\040from\040settings\040where\040name\040=\040'loader\040type'\040and\040client_id\040=\040'1800contacts'\040limit\04010;
select\040client_id,name,value,objectValue\040from\040settings\040where\040name\040=\040'loader\040type'\040and\040client_id\040=\040'1800flowers'\040limit\04010;
select\040client_id,name,value,objectValue\040from\040settings\040where\040name\040=\040'loader\040type'\040\040limit\04010;
\\q
select\040*\040from\040mysql.slow_log\040limit\0401;
select\040*\040from\040mysql.slow_log\040limit\0401\\G;
select\040count(*)\040from\040mysql.slow_log;
select\040*\040from\040mysql.slow_log\040order\040by\040query_time\040desc\040limit\0403\040\\G\040;
select\040*\040from\040mysql.general_log\040limit\04010;
select\040*\040from\040mysql.general_log\040limit\04010\\G;
\040\\q
select\040*\040from\040mysql.slow_log\040limit\04010\040\\G;
select\040count(*)\040from\040mysql.slow_log;
select\040count(*)\040from\040mysql.general_log;
\040CALL\040mysql.rds_rotate_general_log;
select\040count(*)\040from\040mysql.general_log;
select\040*\040from\040mysql.tables;
use\040mysql
show\040tables;
alter\040table\040insight.mate_columns\040ENGINE=InnoDB;
select\040count(*)\040from\040insight.mate_columns;
show\040processlist;
show\040full\040processlist;
show\040processlist;
CALL\040mysql.rds_kill(10648);
show\040processlist;
use\040mysql;
show\040tables;
\040exiit
\\q
show\040processlist;
show\040databases;
use\040information_schema
show\040tables;
show\040open\040tables;
show\040databases;
use\040tmp
show\040tables;
create\040table\040zvika\040(id\040number\040);
create\040table\040zvika\040(id\040numeric\040);
show\040table\040info\040for\040zvika;
select\040*\040from\040information_schema.TABLES\040limit\0401;
select\040*\040from\040information_schema.TABLES\040limit\0401\\G;
insert\040into\040tmp.zvika\040values\040(1);
insert\040into\040tmp.zvika\040values\040(2);
insert\040into\040tmp.zvika\040values\040(3);
update\040tmp.zvika\040set\040id\040=99\040where\040id\040=1;
SHOW\040OPEN\040TABLES\040WHERE\040Table\040LIKE\040'%'\040AND\040Database\040LIKE\040'tmp'\040AND\040In_use\040>\0400;
use\040information_schema;
show\040tables;
show\040open\040tables;
show\040open\040tables\040where\040table\040like\040'%rds%';
show\040open\040tables\040where\040`table`\040like\040'%rds%';
show\040open\040tables\040where\040database\040like\040'mysql'\040and\040`table`\040like\040'%rds%';
show\040open\040tables\040where\040Database\040like\040'mysql'\040and\040`table`\040like\040'%rds%';
show\040open\040tables\040where\040`Database`\040like\040'mysql'\040and\040`table`\040like\040'%rds%';
show\040open\040tables\040where\040`Database`\040like\040'mysql'\040and\040`table`\040like\040'%rds%'\040and\040in_use\040>\0400;
use\040mysql;
show\040tables;
select\040*\040from\040slow_log\040limit\0401\040\\G;
select\040start_time,user_host,query_time,lock_time,rows_examined,rows_sent,substr(sql_text,1,100)\040sql\040from\040mysql.slow_log\040where\040user\040like\040@1\040order\040by\040start_time\040;
select\040start_time,user_host,query_time,lock_time,rows_examined,rows_sent,substr(sql_text,1,100)\040sql\040from\040mysql.slow_log\040where\040user\040like\040'%'\040order\040by\040start_time\040;
select\040start_time,user_host,query_time,lock_time,rows_examined,rows_sent,substr(sql_text,1,100)\040as\040sql\040from\040mysql.slow_log\040where\040user\040like\040'%'\040order\040by\040start_time\040;
select\040start_time,user_host,query_time,lock_time,rows_examined,rows_sent,substr(sql_text,1,100)\040as\040sqll\040from\040mysql.slow_log\040where\040user\040like\040'%'\040order\040by\040start_time\040;
select\040start_time,user_host,query_time,lock_time,rows_examined,rows_sent,substr(sql_text,1,100)\040as\040sqll\040from\040mysql.slow_log\040where\040user_host\040like\040'%'\040order\040by\040start_time\040;
select\040start_time,user_host,query_time,lock_time,rows_examined,rows_sent,substr(sql_text,1,80)\040as\040sqll\040from\040mysql.slow_log\040where\040user_host\040like\040'%'\040order\040by\040start_time\040;
show\040global\040variable\040like\040'%max%';
show\040global\040variable;
show\040global\040variables;
show\040global\040variables\040like\040'%max%';
\\q
show\040global\040varaiable\040like\040'%max%'
;
show\040global\040varuable\040\040like\040'%max%'
;
show\040global\040variables\040\040like\040'%max%'
;
select\040id,user,HOST,DB,COMMAND,TIME,STATE,substr(INFO,1,100)\040as\040info\040from\040information_schema.processlist\040\040order\040by\040time;
select\040substr(host,1,instr(host,':'))\040as\040xxx,id,user,HOST,DB,COMMAND,TIME,STATE,substr(INFO,1,100)\040as\040info\040from\040information_schema.processlist\040\040order\040by\040time;
select\040substr(host,1,instr(host,':')-1)\040as\040xxx,id,user,HOST,DB,COMMAND,TIME,STATE,substr(INFO,1,100)\040as\040info\040from\040information_schema.processlist\040\040order\040by\040time;
select\040substr(host,1,instr(host,':')-1)\040as\040host,count(*)\040from\040information_schema.processlist\040group\040by\040substr(host,1,instr(host,':')-1)\040\040order\040by\0401;
select\040substr(host,1,instr(host,':')-1)\040as\040host,count(*)\040from\040information_schema.processlist\040group\040by\040substr(host,1,instr(host,':')-1)\040\040order\040by\0402\040;
select\040substr(host,1,instr(host,':')-1)\040as\040host,command,,count(*)\040from\040information_schema.processlist\040group\040by\040substr(host,1,instr(host,':')-1),command\040\040order\040by\0402\040;
select\040substr(host,1,instr(host,':')-1)\040as\040host,command,count(*)\040from\040information_schema.processlist\040group\040by\040substr(host,1,instr(host,':')-1),command\040\040order\040by\0402\040;
select\040substr(host,1,instr(host,':')-1)\040as\040host,command,count(*)\040from\040information_schema.processlist\040group\040by\040substr(host,1,instr(host,':')-1),command\040\040order\040by\0403,1;
select\040count(1)\040from\040mysql.slow_log;
select\040*\040from\040mysql.slow_log\040limit\0401;
select\040start_time\040from\040mysql.slow_log\040limit\0401;
select\040*\040from\040mysql.slow_log\040order\040by\040start_time\040desc\040limit\040100;
select\040*\040from\040mysql.slow_log\040order\040by\040start_time\040desc\040limit\0401
;
select\040start_time,query_time,rows_sent,rows_examined,sql_text\040from\040mysql.slow_log\040order\040by\040start_time\040desc\040limit\04010;
select\040start_time,query_time,rows_sent,rows_examined,substr(sql_text,1,60)\040as\040sql\040from\040mysql.slow_log\040order\040by\040start_time\040desc\040limit\04010;
select\040start_time,query_time,rows_sent,rows_examined,substr(sql_text,1,60)\040as\040sqaal\040from\040mysql.slow_log\040order\040by\040start_time\040desc\040limit\04010;
select\040minute(start_time)\040min,count(*)\040\040from\040mysql.slow_log\040\040where\040start_time\040>\040date_sub(now(),\040interval\04010\040minute)\040group\040by\040minute(start_time);
select\040*\040from\040information_schema.processlist\040limit\0401\040\\G;
select\040*\040from\040mysql.slow_log\040limit\0401\040\\G;
\\q
select\040*\040from\040queued_reports\040where\040id\040in\040(194415,194520,194470);
select\040id,retries_count,status\040from\040queued_reports\040where\040id\040in\040(194415,194520,194470);
desc\040queued_reports;
select\040id,retries_count\040from\040queued_reports\040where\040id\040in\040(194415,194520,194470);
update\040queued_reports\040set\040retries_count\040=\0405\040where\040id\040in\040(194415,194520,194470);
commit;
select\040id,retries_count\040from\040queued_reports\040where\040id\040in\040(194415,194520,194470);
select\040*\040from(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040freshness_date\040else\040dashv2_freshness_date\040end\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp\040ilp_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040data_lag_hrs\040else\040dashv2_lag_hrs\040end\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040real_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040q1.client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date\040real_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040date(esc_gen_date)\040else\040freshness_date\040end\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040timestampdiff(MINUTE,\040from_unixtime(esc_gen_timestamp),\040now()\040)/\04060\040else\040data_lag_hrs\040end\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040pm.client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unix\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timest()\040)/\04060\040\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_esc),\040@@global.time_zone,\040tz\040))\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(clc_time),\040@@global.time_zone,\040tz\040)\040as\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(client_now)\040as\040client_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hour(client_now)\040+\040minute(client_now)/60\040client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_time\040clc_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date\040esc_gen_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERTglobal.\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZe,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_dv2),\040@@global.time_zone,\040tz\040))\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_dv2),\040now()\040)/\04060\040\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_esc,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_dv2
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040processing_metadata
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040((data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040and\040process_type\040=\040'loader'\040\040and\040load_id\040<>\040-1)\040or
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040and\040process_type\040=\040'load'\040))
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040and\040load_id\040is\040not\040null
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040group\040by\040client_id
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040pm\040left\040join
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040s.*,\040timezone\040tz,\040esc_max_processing_ts\040esc_gen_date\040from\040vw_client_data_status\040s
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040s
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040d)
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040pm.client_id\040not\040in\040('square','trendmicro','insight','beachbody','dailyburn','dermstore','topspin','astro_gaming','ppca','pennfoster','anntaylor','relayfoods','cordblood','echosign','esalon','echostar','watson','sttropez','acmg','nfl','garage_doors','dogvacay','banana','zinroncar','brilliantearth','kraft','yihaodian','shabbyapple','nordstrom')
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040q1)\040q2)\040q3
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040(((\040(client_date\040>\040freshness_date\040and\040data_lag_hrs\040>\0406\040)\040\040or\040dashv2_lag_hrs\040>\04020\040)\040and\040(\040client_hour\040>=\0404.5\040)\040)\040or\040(coalesce(eod_gen,-1)<0\040\040and\040client_hour>2.5))\040and\040esc_loader_gen>-1\040and
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id\040in\040(select\040id\040from\040clients\040where\040active\040=\0401)
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040order\040by\040client_hour\040desc
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040tb;
select\040*\040from(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040freshness_date\040else\040dashv2_freshness_date\040end\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp\040ilp_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040data_lag_hrs\040else\040dashv2_lag_hrs\040end\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040real_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040q1.client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date\040real_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040date(esc_gen_date)\040else\040freshness_date\040end\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040timestampdiff(MINUTE,\040from_unixtime(esc_gen_timestamp),\040now()\040)/\04060\040else\040data_lag_hrs\040end\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040pm.client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unix\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timest()\040)/\04060\040\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_esc),\040@@global.time_zone,\040tz\040))\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(clc_time),\040@@global.time_zone,\040tz\040)\040as\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(client_now)\040as\040client_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hour(client_now)\040+\040minute(client_now)/60\040client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_time\040clc_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date\040esc_gen_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERTglobal.\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZe,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_dv2),\040@@global.time_zone,\040tz\040))\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_dv2),\040now()\040)/\04060\040\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_esc,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_dv2\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040processing_metadata\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040((data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040and\040process_type\040=\040'loader'\040\040and\040load_id\040<>\040-1)\040or\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040and\040process_type\040=\040'load'\040))\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040and\040load_id\040is\040not\040null\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040group\040by\040client_id\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040pm\040left\040join\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040s.*,\040timezone\040tz,\040esc_max_processing_ts\040esc_gen_date\040from\040vw_client_data_status\040s\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040s\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040d)\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040pm.client_id\040not\040in\040('square','trendmicro','insight','beachbody','dailyburn','dermstore','topspin','astro_gaming','ppca','pennfoster','anntaylor','relayfoods','cordblood','echosign','esalon','echostar','watson','sttropez','acmg','nfl','garage_doors','dogvacay','banana','zinroncar','brilliantearth','kraft','yihaodian','shabbyapple','nordstrom')\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040q1)\040q2)\040q3\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040(((\040(client_date\040>\040freshness_date\040and\040data_lag_hrs\040>\0406\040)\040\040or\040dashv2_lag_hrs\040>\04020\040)\040and\040(\040client_hour\040>=\0404.5\040)\040)\040or\040(coalesce(eod_gen,-1)<0\040\040and\040client_hour>2.5))\040and\040esc_loader_gen>-1\040and\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id\040in\040(select\040id\040from\040clients\040where\040active\040=\0401)\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040order\040by\040client_hour\040desc\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040tb;
\\q
select\040client_id,data_lag_hrs,dashv2_lag_hrs,freshness_date,dashv2_freshness_date,tz,client_date,client_hour,ilp_timestamp,ilp_date,eod_gen,ilp_gen,hs_loader_gen,esc_loader_gen,hsm_gen,esc_gen,esc_gen_date\040from\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040*\040from(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040freshness_date\040else\040dashv2_freshness_date\040end\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp\040ilp_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040data_lag_hrs\040else\040dashv2_lag_hrs\040end\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040real_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040q1.client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date\040real_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040date(esc_gen_date)\040else\040freshness_date\040end\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040timestampdiff(MINUTE,\040from_unixtime(esc_gen_timestamp),\040now()\040)/\04060\040else\040data_lag_hrs\040end\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040pm.client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_esc),\040now()\040)/\04060\040\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_esc),\040@@global.time_zone,\040tz\040))\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(clc_time),\040@@global.time_zone,\040tz\040)\040as\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(client_now)\040as\040client_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hour(client_now)\040+\040minute(client_now)/60\040client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_time\040clc_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date\040esc_gen_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(esc_gen_date),\040@@global.time_zone,\040tz\040)\040as\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_dv2),\040@@global.time_zone,\040tz\040))\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_dv2),\040now()\040)/\04060\040\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_esc,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_dv2
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040processing_metadata
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040((data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040and\040process_type\040=\040'loader'\040\040and\040load_id\040<>\040-1)\040or
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040and\040process_type\040=\040'load'\040))
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040and\040load_id\040is\040not\040null
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040group\040by\040client_id
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040pm\040left\040join
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040s.*,\040timezone\040tz,\040esc_max_processing_ts\040esc_gen_date\040from\040vw_client_data_status\040s
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040s
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040on\040(pm.client_id\040=\040s.client_id)
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040pm.client_id\040not\040in\040('square','trendmicro','insight','beachbody','dailyburn','dermstore','topspin','astro_gaming','ppca','pennfoster','anntaylor','relayfoods','cordblood','echosign','esalon','echostar','watson','sttropez','acmg','nfl','garage_doors','dogvacay','banana','zinroncar','brilliantearth','kraft')
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040q1)\040q2)\040q3
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040w\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040w\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040e\040and\040data_lag_hrs\040>\0406\040)\040\040or\040dashv2_lag_hrs\040>\04020\040)\040and\040(\040client_hour\040>=\0404.5\040)\040)\040or\040(coalesce(eod_gen,-1)<0\040\040and\040client_hour>2.5))\040and\040esc_loader_gen>-1\040and
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id\040in\040(select\040id\040from\040clients\040where\040active\040=\0401)
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040order\040by\040client_hour\040desc
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040tb;
select\040client_id,data_lag_hrs,dashv2_lag_hrs,freshness_date,dashv2_freshness_date,tz,client_date,client_hour,ilp_timestamp,ilp_date,eod_gen,ilp_gen,hs_loader_gen,esc_loader_gen,hsm_gen,esc_gen,esc_gen_date\040from\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040*\040from(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040freshness_date\040else\040dashv2_freshness_date\040end\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp\040ilp_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040data_lag_hrs\040else\040dashv2_lag_hrs\040end\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040real_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040q1.client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date\040real_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040date(esc_gen_date)\040else\040freshness_date\040end\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040timestampdiff(MINUTE,\040from_unixtime(esc_gen_timestamp),\040now()\040)/\04060\040else\040data_lag_hrs\040end\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040pm.client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_esc),\040now()\040)/\04060\040\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_esc),\040@@global.time_zone,\040tz\040))\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(clc_time),\040@@global.time_zone,\040tz\040)\040as\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(client_now)\040as\040client_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hour(client_now)\040+\040minute(client_now)/60\040client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_time\040clc_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date\040esc_gen_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(esc_gen_date),\040@@global.time_zone,\040tz\040)\040as\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_dv2),\040@@global.time_zone,\040tz\040))\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_dv2),\040now()\040)/\04060\040\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_esc,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_dv2\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040processing_metadata\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040((data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040and\040process_type\040=\040'loader'\040\040and\040load_id\040<>\040-1)\040or\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040and\040process_type\040=\040'load'\040))\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040and\040load_id\040is\040not\040null\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040group\040by\040client_id\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040pm\040left\040join\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040s.*,\040timezone\040tz,\040esc_max_processing_ts\040esc_gen_date\040from\040vw_client_data_status\040s\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040s\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040on\040(pm.client_id\040=\040s.client_id)\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040pm.client_id\040not\040in\040('square','trendmicro','insight','beachbody','dailyburn','dermstore','topspin','astro_gaming','ppca','pennfoster','anntaylor','relayfoods','cordblood','echosign','esalon','echostar','watson','sttropez','acmg','nfl','garage_doors','dogvacay','banana','zinroncar','brilliantearth','kraft')\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040q1)\040q2)\040q3\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040w\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040w\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040e\040and\040data_lag_hrs\040>\0406\040)\040\040or\040dashv2_lag_hrs\040>\04020\040)\040and\040(\040client_hour\040>=\0404.5\040)\040)\040or\040(coalesce(eod_gen,-1)<0\040\040and\040client_hour>2.5))\040and\040esc_loader_gen>-1\040and\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id\040in\040(select\040id\040from\040clients\040where\040active\040=\0401)\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040order\040by\040client_hour\040desc\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040tb;
select\040client_id,data_lag_hrs,dashv2_lag_hrs,freshness_date,dashv2_freshness_date,tz,client_date,client_hour,ilp_timestamp,ilp_date,eod_gen,ilp_gen,hs_loader_gen,esc_loader_gen,hsm_gen,esc_gen,esc_gen_date\040from\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040*\040from(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040freshness_date\040else\040dashv2_freshness_date\040end\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp\040ilp_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040data_lag_hrs\040else\040dashv2_lag_hrs\040end\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040real_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040q1.client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date\040real_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040date(esc_gen_date)\040else\040freshness_date\040end\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040timestampdiff(MINUTE,\040from_unixtime(esc_gen_timestamp),\040now()\040)/\04060\040else\040data_lag_hrs\040end\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040pm.client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_esc),\040now()\040)/\04060\040\040data_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_esc),\040@@global.time_zone,\040tz\040))\040freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(clc_time),\040@@global.time_zone,\040tz\040)\040as\040ilp_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(client_now)\040as\040client_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hour(client_now)\040+\040minute(client_now)/60\040client_hour,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_time\040clc_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date\040esc_gen_timestamp,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(esc_gen_date),\040@@global.time_zone,\040tz\040)\040as\040esc_gen_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_dv2),\040@@global.time_zone,\040tz\040))\040dashv2_freshness_date,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_dv2),\040now()\040)/\04060\040\040dashv2_lag_hrs,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_esc,
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_dv2
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040processing_metadata
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040((data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040and\040process_type\040=\040'loader'\040\040and\040load_id\040<>\040-1)\040or
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040and\040process_type\040=\040'load'\040))
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040and\040load_id\040is\040not\040null
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040group\040by\040client_id
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040pm\040left\040join
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040s.*,\040timezone\040tz,\040esc_max_processing_ts\040esc_gen_date\040from\040vw_client_data_status\040s
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040s
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040on\040(pm.client_id\040=\040s.client_id)
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040pm.client_id\040not\040in\040('square','trendmicro','insight','beachbody','dailyburn','dermstore','topspin','astro_gaming','ppca','pennfoster','anntaylor','relayfoods','cordblood','echosign','esalon','echostar','watson','sttropez','acmg','nfl','garage_doors','dogvacay','banana','zinroncar','brilliantearth','kraft','yihaodian','shabbyapple','nordstrom')
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040q1)\040q2)\040q3
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040(((\040(client_date\040>\040freshness_date\040and\040data_lag_hrs\040>\0406\040)\040\040or\040dashv2_lag_hrs\040>\04020\040)\040and\040(\040client_hour\040>=\0404.5\040)\040)\040or\040(coalesce(eod_gen,-1)<0\040\040and\040client_hour>2.5))\040and\040esc_loader_gen>-1\040and
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id\040in\040(select\040id\040from\040clients\040where\040active\040=\0401)
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040order\040by\040client_hour\040desc
\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040tb;
select\040client_id,data_lag_hrs,dashv2_lag_hrs,freshness_date,dashv2_freshness_date,tz,client_date,client_hour,ilp_timestamp,ilp_date,eod_gen,ilp_gen,hs_loader_gen,esc_loader_gen,hsm_gen,esc_gen,esc_gen_date\040from\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040*\040from(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040freshness_date\040else\040dashv2_freshness_date\040end\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp\040ilp_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040real_freshness_date=dashv2_freshness_date\040then\040data_lag_hrs\040else\040dashv2_lag_hrs\040end\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040real_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040q1.client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040freshness_date\040real_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040date(esc_gen_date)\040else\040freshness_date\040end\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040case\040when\040client_date\040>\040freshness_date\040and\040esc_gen_date>\040client_date\040then\040timestampdiff(MINUTE,\040from_unixtime(esc_gen_timestamp),\040now()\040)/\04060\040else\040data_lag_hrs\040end\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,client_date,client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040pm.client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_esc),\040now()\040)/\04060\040\040data_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_esc),\040@@global.time_zone,\040tz\040))\040freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(clc_time),\040@@global.time_zone,\040tz\040)\040as\040ilp_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040tz,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(client_now)\040as\040client_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hour(client_now)\040+\040minute(client_now)/60\040client_hour,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040clc_time\040clc_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040ilp_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hs_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_loader_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040hsm_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040esc_gen_date\040esc_gen_timestamp,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040CONVERT_TZ(\040from_unixtime(esc_gen_date),\040@@global.time_zone,\040tz\040)\040as\040esc_gen_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040date(CONVERT_TZ(\040from_unixtime(data_end_ts_dv2),\040@@global.time_zone,\040tz\040))\040dashv2_freshness_date,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040timestampdiff(MINUTE,\040from_unixtime(data_end_ts_dv2),\040now()\040)/\04060\040\040dashv2_lag_hrs,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_now,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040eod_gen\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_esc,\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040max(CASE\040WHEN\040data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040then\040data_end_ts\040else\0400\040end)\040data_end_ts_dv2\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040from\040processing_metadata\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040((data_type\040=\040'event_source_cache'\040and\040subsystem_id\040=\040'wtf'\040and\040process_type\040=\040'loader'\040\040and\040load_id\040<>\040-1)\040or\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(data_type\040=\040'max_processing_ts'\040and\040subsystem_id\040=\040'dv2'\040and\040process_type\040=\040'load'\040))\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040and\040load_id\040is\040not\040null\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040group\040by\040client_id\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040pm\040left\040join\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040(\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040select\040s.*,\040timezone\040tz,\040esc_max_processing_ts\040esc_gen_date\040from\040vw_client_data_status\040s\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040s\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040on\040(pm.client_id\040=\040s.client_id)\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040pm.client_id\040not\040in\040('square','trendmicro','insight','beachbody','dailyburn','dermstore','topspin','astro_gaming','ppca','pennfoster','anntaylor','relayfoods','cordblood','echosign','esalon','echostar','watson','sttropez','acmg','nfl','garage_doors','dogvacay','banana','zinroncar','brilliantearth','kraft','yihaodian','shabbyapple','nordstrom')\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040q1)\040q2)\040q3\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040where\040(((\040(client_date\040>\040freshness_date\040and\040data_lag_hrs\040>\0406\040)\040\040or\040dashv2_lag_hrs\040>\04020\040)\040and\040(\040client_hour\040>=\0404.5\040)\040)\040or\040(coalesce(eod_gen,-1)<0\040\040and\040client_hour>2.5))\040and\040esc_loader_gen>-1\040and\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040client_id\040in\040(select\040id\040from\040clients\040where\040active\040=\0401)\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040order\040by\040client_hour\040desc\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040)\040tb;
\\q
select\040*\040from\040settings\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
select\040*\040from\040settings\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
select\040*\040from\040settings\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
SET\040AUTOCOMMIT=0;
select\040*\040from\040settings\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
update\040settings\040set\040value\040=\040null\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
commit;
select\040*\040from\040settings\040where\040name\040=\040'rck.loader.state.generation.vh.stage'\040and\040client_id\040=\040'zendesk';
select\040report_type\040from\040insight.scheduled_reports\040where\040client_id\040=\040'qvc';
select\040*\040from\040insight.queued_reports\040where\040client_id\040=\040'qvc'\040and\040report\040=\040'Detailed\040Conversion\040Data\040(Clicks\040+\040Views)'\040limit\04010;
select\040*\040from\040insight.queued_reports\040limit\0401\040\\G;
select\040*\040from\040insight.queued_reports\040where\040client_id\040=\040'qvc'\040and\040report\040=\040'Detailed\040Conversion\040Data\040(Clicks\040+\040Views)'\040limit\0401\040\\G;
select\040*\040from\040insight.queued_reports\040where\040client_id\040=\040'qvc'\040and\040report\040=\040'Detailed\040Conversion\040Data\040(Clicks\040+\040Views)'\040limit\04010\040\\G\040>\040/tmp/1.txt
\\q
show\040databases;
show\040tables;
select\040count(*)\040from\040settings_history;
select\040trigger_name\040from\040\040information_schema.TRIGGERS;
DELIMITER\040$$
CREATE\040TRIGGER\040after_zvika_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040SET\040action\040=\040'update',
\040\040\040\040id\040=\040OLD.id,
name\040=\040OLD.name,
objectValue\040=\040OLD.objectValue,
value\040=\040OLD.value,
client_id\040=\040OLD.client_id,
user_id\040=\040OLD.user_id,
update_ts\040=\040OLD.update_ts,
\040\040\040\040change_date\040=\040NOW();\040
END;
;
\\
/
DELIMITER\040$$
CREATE\040TRIGGER\040after_zvika_update
\040\040\040AFTER\040UPDATE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
DELIMITER\040$$
show\040triggers;
;
$$
show\040triggers;\040;$$
show\040triggers$$
CREATE\040TRIGGER\040after_zvika_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,ojectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_zvika_update\040\040\040\040\040\040AFTER\040UPDATE\040ON\040zvika\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040zvika_hist\040\040\040\040\040(id,name,ojectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);\040END;$$
show\040triggers\040$$
\\q
select\040trigger_name\040from\040information_schema.triggers;
select\040count(*)\040from\040zvika_hist;
select\040*\040from\040zvika\040limit\0405;
update\040zvika\040set\040update_ts\040=\040now()\040where\040id\040=\0409380;
delimiter\040$$
CREATE\040or\040replace\040TRIGGER\040after_zvika_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
$$
CREATE\040or\040replace\040TRIGGER\040after_zvika_update\040\040\040\040\040\040AFTER\040UPDATE\040ON\040zvika\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040zvika_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);\040END;$$
drop\040trigger\040after_zvika_update\040$$
CREATE\040or\040replace\040TRIGGER\040after_zvika_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
delimiter\040$$
CREATE\040TRIGGER\040after_zvika_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_zvika_update\040\040\040\040\040\040AFTER\040UPDATE\040ON\040zvika\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040zvika_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);\040END;$$
delimiter\040;
show\040triggers;
update\040zvika\040set\040update_ts\040=\040now()\040where\040id\040=\0409380;
select\040count(*)\040from\040zvika_hist;
select\040*\040from\040zvika_hist;
\\q
select\040*\040from\040zvika_hist;
show
;
autocommit\040off;
show\040global\040variables\040like\040'autocommit';
set\040autocommit\040=\0400;
show\040global\040variables\040like\040'autocommit';
show\040variables\040like\040'autocommit';
set\040autocommit\040=\0401;
show\040variables\040like\040'autocommit';
set\040autocommit\040=\040off;
show\040variables\040like\040'autocommit';
select\040*\040from\040zvika_hist;
update\040zvika\040set\040user_id\040=\040'zvika'\040where\040id\040=\0409380;
rollback;
select\040*\040from\040zvika_hist;
update\040zvika\040set\040user_id\040=\040'zvika'\040where\040id\040=\0409380;
select\040*\040from\040zvika_hist;
delimiter\040$$
CREATE\040TRIGGER\040after_zvika_delete\040
\040\040\040\040AFTER\040DELETE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_zvika_delete\040\040\040\040\040\040AFTER\040DELETE\040ON\040zvika\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040zvika_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);\040END;$$
delimiter\040;
show\040triggers;
select\040*\040from\040zvika_hist;
update\040zvika\040set\040user_id\040=\040'zvika1'\040where\040id\040=\0409380;
select\040*\040from\040zvika_hist;
show\040variable\040like\040autocommit;
drop\040trigger\040after_zvika_delete;
set\040delimiter\040$$
CREATE\040TRIGGER\040after_zvika_delete\040
\040\040\040\040AFTER\040DELETE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);
set\040delimiter\040$$\040CREATE\040TRIGGER\040after_zvika_delete\040\040\040\040\040\040AFTER\040DELETE\040ON\040zvika\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040zvika_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);
END;
set\040delimiter\040$$
;
delimiter\040$$
CREATE\040TRIGGER\040after_zvika_delete\040
\040\040\040\040AFTER\040DELETE\040ON\040zvika
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040zvika_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_zvika_delete\040\040\040\040\040\040AFTER\040DELETE\040ON\040zvika\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040zvika_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);\040END;$$
delimiter\040;
select\040*\040from\040zvika\040where\040id\040=\0409380;
\\help
show\040table\040select\040TABLE_SCHEMA,TABLE_NAME,TABLE_TYPE,ENGINE,TABLE_ROWS,AVG_ROW_LENGTH,DATA_LENGTH,MAX_DATA_LENGTH,DATA_FREE,CREATE_TIME,UPDATE_TIME,CREATE_OPTIONS\040from\040information_schema.TABLES\040where\040table_name\040=\040'zvika';
select\040TABLE_SCHEMA,TABLE_NAME,TABLE_TYPE,ENGINE,TABLE_ROWS,AVG_ROW_LENGTH,DATA_LENGTH,MAX_DATA_LENGTH,DATA_FREE,CREATE_TIME,UPDATE_TIME,CREATE_OPTIONS\040from\040information_schema.TABLES\040where\040table_name\040=\040'zvika';
show\040tables\040like\040%columns%
;
use\040mysql
show\040tables;
use\040information_schema;
show\040tables;
desc\040COLUMNS
;
show\040databases;
use\040cvo
show\040tables;
use\040insight
show\040tables;
desc\040zvika;
show\040tables;
select\040*\040from\040zvika_hist;
select\040*\040from\040zvika\040where\040id\040=\0409380;
update\040zvika\040set\040user_id\040=\040111\040where\040id\040=\0409380;
select\040*\040from\040zvika\040where\040id\040=\0409380;
select\040*\040from\040zvika_hist;
select\040*\040from\040zvika_hist\040order\040by\040change_date;
update\040zvika\040set\040user_id\040=\040111\040where\040id\040=\0409380;
select\040*\040from\040zvika_hist\040order\040by\040change_date;
id
;
show\040tables;
show\040tables\040like\040'%sett%'
;
desc\040settings;
select\040count(*)\040from\040settings_history;
desc\040zvika;
desc\040zvika_hist;
\\q
DELIMITER\040$$
create\040table\040settings_hist\040as\040select\040*\040from\040settings\040where\0401=0\040;
$$
delimiter\040;
alter\040table\040settings_hist\040\040add\040column\040
(action\040varchar(20),
change_date\040datetime);
alter\040table\040settings_hist\040\040add\040column\040\040(action\040varchar(20),\040change_date\040datetime);
DELIMITER\040$$
CREATE\040TRIGGER\040after_settings_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040settings
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040settings_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_settings_update\040\040\040\040\040\040AFTER\040UPDATE\040ON\040settings\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040settings_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);\040END;$$
CREATE\040TRIGGER\040after_settings_delete\040
\040\040\040\040AFTER\040DELETE\040ON\040settings
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040settings_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_settings_delete\040\040\040\040\040\040AFTER\040DELETE\040ON\040settings\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040settings_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);\040END;$$
delimiter\040;
\\q
desc\040mysql.users;
use\040mysql
show\040tables;
desc\040user
;
select\040host,user\040from\040user;
\\q
desc\040settings
;
\\q
desc\040settings;
show\040databases;
\040
\\q
show\040databases;
desc\040settings;
\040\\q
show\040create\040table\040for\040settings;
show\040create\040table\040settings;
\\w
\\q
show\040create\040table\040settings;
\\q
alter\040table\040settings\040add\040update_ts\040timestamp\040NOT\040NULL\040DEFAULT\040CURRENT_TIMESTAMP\040ON\040UPDATE\040CURRENT_TIMESTAMP;
desc\040settings;
\\q
desc\040settings;
\\q
show\040tables;
select\040count(*)\040from\040settings_hist;
show\040tables;
select\040count(*)\040from\040settings_history;
select\040count(*)\040from\040settings;
create\040table\040settings_hist\040as\040select\040*\040from\040settings\040where\0401=0\040;
alter\040table\040settings_hist\040\040add\040column\040
(action\040varchar(20),
change_date\040datetime);
alter\040table\040settings_hist\040\040add\040column\040\040(action\040varchar(20),\040change_date\040datetime);
DELIMITER\040$$
select\040now()
$$
CREATE\040TRIGGER\040after_settings_update\040
\040\040\040\040AFTER\040UPDATE\040ON\040settings
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040settings_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_settings_update\040\040\040\040\040\040AFTER\040UPDATE\040ON\040settings\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040settings_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'update',NOW()\040);\040END;$$
CREATE\040TRIGGER\040after_settings_delete\040
\040\040\040\040AFTER\040DELETE\040ON\040settings
\040\040\040\040FOR\040EACH\040ROW\040BEGIN
\040
\040\040\040\040INSERT\040INTO\040settings_hist
\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)
\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);
END;
$$
CREATE\040TRIGGER\040after_settings_delete\040\040\040\040\040\040AFTER\040DELETE\040ON\040settings\040\040\040\040\040FOR\040EACH\040ROW\040BEGIN\040\040\040\040\040\040\040INSERT\040INTO\040settings_hist\040\040\040\040\040(id,name,objectValue,value,client_id,user_id,update_ts,action,change_date)\040\040\040\040\040values\040(OLD.id,OLD.name,OLD.objectValue,OLD.value,OLD.client_id,OLD.user_id,OLD.update_ts,'delete',NOW()\040);\040END;$$
select\040count(*)\040from\040settings_hist;
show\040tables;
select\040*\040from\040information_schema.TABLES\040limit\04010;
select\040*\040from\040information_schema.TABLES\040limit\04010\040\\S
select\040*\040from\040information_schema.TABLES\040limit\04010\040\\S\040;
select\040*\040from\040information_schema.TABLES\040limit\04010\040\\S\040select\040*\040from\040information_schema.TABLES\040limit\04010\040\\S;
select\040*\040from\040information_schema.TABLES\040limit\04010\040\\S\040select\040*\040from\040information_schema.TABLES\040limit\04010\040\\W;
select\040*\040from\040information_schema.TABLES\040where\040table_name\040\040=\040'settings_hist';
\\q
use\040mysql;
show\040tables;
use\040information_schema;
show\040tables;
select\040*\040from\040INNODB_LOCKS\040limit\0401;
show\040fullprocesslist;
show\040full\040processlist;
\\q
use\040information_schema;
show\040tables;
select\040*\040from\040INNODB_LOCKS;
select\040*\040from\040INNODB_LOCK_WAITS;
show\040open\040tables;
\040SHOW\040ENGINE\040INNODB\040STATUS
;
show\040open\040tables;
\\q
show\040open\040tables;
\040SHOW\040ENGINE\040INNODB\040STATUS;
\\q
\040SHOW\040ENGINE\040INNODB\040STATUS;
\040\\q
\\q
show\040full\040processlist;
show\040engine\040innodb\040status;
\\q
create\040table\040zvika\040(id\040number\040,stam\040char(10)\040engine\040innodb;
\\q
create\040table\040zvika\040(id\040number\040,stam\040char(10))\040engine\040innodb;
create\040table\040zvika\040(id\040number\040,stam\040char(10))\040;
create\040table\040zvika\040(id\040integer\040,stam\040char(10))\040;
show\040create\040table\040zvika;
insert\040into\040zvika\040values\040(1,'aaa');
insert\040into\040zvika\040values\040(2,'bbb');
set\040global\040variable\040autocommit=0;
set\040global\040variables\040autocommit=0;
show\040global\040variables\040like\040commit;
show\040global\040variables;
show\040global\040variables\040like\040'%commit%';
set\040global\040varivale\040autocommit\040off;
set\040\040varivale\040autocommit\040off;
set\040\040varible\040\040autocommit\040off;
set\040\040variables\040\040autocommit\040off;
set\040\040variable\040\040autocommit\040off;
set\040\040\040autocommit\040off;
set\040\040\040autocommit=\040off;
show\040global\040variables\040like\040'%commit%';
show\040\040variables\040like\040'%commit%';
select\040*\040from\040zvika;
delete\040from\040zvika\040where\040id\040=\0401;
kill\0401773435
;
kill\0401773523;
\\q
show\040tables;
select\040count(*)\040from\040settings_hist
;
select\040count(*)\040from\040settings_history;
\\q
show\040tables;
\\q
show\040tables;
\\q
select\040count(*)\040from\040processing_metadata;
\\q
SHOW\040VARIABLES\040LIKE\040'max_allowed_packet';
SET\040GLOBAL\040max_allowed_packet\040=\0401024\040*\0401024\040*\0401024\040*1024
;
\\q
show\040users;
show\040databases;
select\040username\040from\040mysql.users;
use\040mysql;
show\040tables;
select\040username\040from\040mysql.user;
select\040user\040from\040mysql.user;
show\040tables;
CREATE\040TABLE\040processing_ts_status_for_recovery
(
\040\040\040\040client\040varchar(255),
\040\040\040\040"table"\040varchar(18),
\040\040\040\040max\040numeric(18,6)
);
CREATE\040TABLE\040processing_ts_status_for_recovery\040(\040\040\040\040\040client\040varchar(255),\040\040\040\040\040"table"\040varchar(18),\040\040\040\040\040max\040numeric(18,6)\040);
CREATE\040TABLE\040processing_ts_status_for_recovery
(
\040\040\040\040client\040varchar(255),
\040\040\040\040table\040varchar(18),
\040\040\040\040max\040numeric(18,6)
);
CREATE\040TABLE\040processing_ts_status_for_recovery\040(\040\040\040\040\040client\040varchar(255),\040\040\040\040\040table\040varchar(18),\040\040\040\040\040max\040numeric(18,6)\040);
CREATE\040TABLE\040processing_ts_status_for_recovery
(
\040\040\040\040client\040varchar(255),
\040\040\040\040`table`\040varchar(18),
\040\040\040\040max\040numeric(18,6)
);
CREATE\040TABLE\040processing_ts_status_for_recovery\040(\040\040\040\040\040client\040varchar(255),\040\040\040\040\040`table`\040varchar(18),\040\040\040\040\040max\040numeric(18,6)\040);
desc\040processing_ts_status_for_recovery
;
load\040data\040infile\040'/Users/zvikagutkin/Vertica/Sql/processing_ts_status_for_recovery.dat'\040into\040table\040processing_ts_status_for_recovery\040fields\040terminated\040by\040'|'\040\040(client,\040table,\040max);
load\040data\040infile\040'/Users/zvikagutkin/Vertica/Sql/processing_ts_status_for_recovery.dat'\040into\040table\040processing_ts_status_for_recovery\040fields\040terminated\040by\040'|'\040\040
;
load\040data\040infile\040'/Users/zvikagutkin/Vertica/Sql/processing_ts_status_for_recovery.dat'\040into\040table\040processing_ts_status_for_recovery\040fields\040terminated\040by\040'|'\040(client,\040table,\040max);
load\040data\040infile\040'/Users/zvikagutkin/Vertica/Sql/processing_ts_status_for_recovery.dat'\040into\040table\040processing_ts_status_for_recovery\040fields\040terminated\040by\040'|'\040(client,\040`table`,\040max);
load\040data\040local\040\040infile\040'/Users/zvikagutkin/Vertica/Sql/processing_ts_status_for_recovery.dat'\040into\040table\040processing_ts_status_for_recovery\040fields\040terminated\040by\040'|'\040(client,\040`table`,\040max);
select\040*\040from\040processing_ts_status_for_recovery
;
select\040*\040from\040settings\040where\040name='regression_enabled';
update\040settings\040set\040value\040=\0400\040where\040name='regression_enabled';
commit;
select\040*\040from\040settings\040
where\040name\040like\040'wtf%rebuild.state.prod'\040and\040value\040not\040in\040(\040'AGGREGATING'\040)\040and\040client_id\040in\040('wineenthusiast','moo','teleflora','diamondcandles','identityguard','indochino','plated','lootcrate','imi','therealreal','baublebar','nuance','zendesk2','surveymonkey');
select\040*\040from\040settings\040\040where\040name\040like\040'wtf%rebuild.state.prod'\040and\040value\040not\040in\040(\040'AGGREGATING'\040)\040and\040client_id\040in\040('wineenthusiast','moo','teleflora','diamondcandles','identityguard','indochino','plated','lootcrate','imi','therealreal','baublebar','nuance','zendesk2','surveymonkey');
select\040*\040from\040settings\040where\040name='regression_enabled';
update\040settings\040set\040value\040=\0401\040where\040name='regression_enabled';
commit;
\\/
\\q
select\040a.id,\040a.started,\040a.scheduled_report_id,\040a.client_id,\040a.complete,\040a.retries_count,\040a.delivered,\040a.delivery_retries_count,\040a.healthcheckpass,\040a.*,\040b.*
from\040queued_reports\040a\040left\040outer\040join\040scheduled_reports\040b\040on\040a.scheduled_report_id\040=\040b.id
where\040--\040enabled\040is\040true\040
(complete\040=\0400\040or\040delivered\040=\0400)
and\040started\040>=\040'2015-12-06';
select\040a.id,\040a.started,\040a.scheduled_report_id,\040a.client_id,\040a.complete,\040a.retries_count,\040a.delivered,\040a.delivery_retries_count,\040a.healthcheckpass,\040a.*,\040b.*\040from\040queued_reports\040a\040left\040outer\040join\040scheduled_reports\040b\040on\040a.scheduled_report_id\040=\040b.id\040where\040\040(complete\040=\0400\040or\040delivered\040=\0400)\040and\040started\040>=\040'2015-12-06';
\040\\q
